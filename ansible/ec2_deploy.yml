- name: Deploy to EC2
  hosts: localhost
  connection: local

  tasks:
    - name: Locate running EC2 instances
      vars:
        ansible_python_interpreter: /usr/local/bin/python3
      ec2_instance_info:
        region: us-east-1
        aws_access_key: ASIA5LTGTUC7YWI5JRLL
        aws_secret_key: fNOFcXub/ErgldB7ZQY7J/dsB8K4yXAr/w2pxLmr
        security_token: FwoGZXIvYXdzEJ3//////////wEaDLu73hTHlu2coG3OWSLDAWBlUZ6bZi0/sy774V5ZBYLdC95o3esCgmQTvDyTRQmBu/S4st3O5Io+z4hTgbwCWGc3LN8WkIWfDKWBWpxvQMPWwB0A1vm+7J3894sMdZpBymtM/UJKGZmPa+P/6LJge447rLIkqxb50EuB37EQ+8Fatjb3eTqe3o3iCAycVz4YLk6FTc3x1X3zlw1P/CGCP1JJ4uNwVmw9xR5lGJ0WMEU6buwy+1bIjeWSxcwBJO50zwyYLlrKE/wXKX9mJEtQuPkAmyie4+7+BTItlbio81ufURspbZiMp802wt8MF1ZDHWcWqvfp+IVeB7X/yq4faauN5CsMJtgE
      register: ec2_info

    - name: Launch EC2 instance
      ec2:
        instance_type: t2.small
        image: ami-085925f297f89fce1
        region: us-east-1
        key_name: test
        vpc_subnet_id: subnet-0412680a
        assign_public_ip: yes
        wait: yes
        count: 1
        group: eshop
        aws_access_key: ASIA5LTGTUC7YWI5JRLL
        aws_secret_key: fNOFcXub/ErgldB7ZQY7J/dsB8K4yXAr/w2pxLmr
        security_token: FwoGZXIvYXdzEJ3//////////wEaDLu73hTHlu2coG3OWSLDAWBlUZ6bZi0/sy774V5ZBYLdC95o3esCgmQTvDyTRQmBu/S4st3O5Io+z4hTgbwCWGc3LN8WkIWfDKWBWpxvQMPWwB0A1vm+7J3894sMdZpBymtM/UJKGZmPa+P/6LJge447rLIkqxb50EuB37EQ+8Fatjb3eTqe3o3iCAycVz4YLk6FTc3x1X3zlw1P/CGCP1JJ4uNwVmw9xR5lGJ0WMEU6buwy+1bIjeWSxcwBJO50zwyYLlrKE/wXKX9mJEtQuPkAmyie4+7+BTItlbio81ufURspbZiMp802wt8MF1ZDHWcWqvfp+IVeB7X/yq4faauN5CsMJtgE
      register: ec2

    - name: Add instance host to group
      add_host: hostname={{ item.public_dns_name }} groupname=launched
      with_items: '{{ec2.instances}}'

    - name: Wait for SSH connection
      wait_for: host={{ item.public_dns_name }} port=22 delay=30 timeout=300 state=started
      with_items: '{{ec2.instances}}'

- name: Configure EC2
  hosts: launched
  connection: ssh

  tasks:
    - name: Install docker
      apt:
        name: docker.io
        state: present
        update_cache: yes
      become: yes
    - service:
        name: docker
        state: started
        enabled: yes
      become: yes
    - name: Get project files from docker
      git:
        repo: "https://github.com/jelinekma/4IT572_semestralka.git"
        dest: ./app
    - name: Build docker with eshop
      shell: cd app && docker build -t myeshop:latest .
      become: yes
    - name: Run docker with eshop
      shell: docker run -p 80:3000 myeshop
      async: 120
      poll: 0
      become: yes
    - wait_for:
        port: 80

- name: Terminate previous instances
  hosts: localhost
  connection: local

  tasks:
    - name: Terminate previous instances
      ec2:
        region: us-east-1
        state: 'absent'
        instance_ids: '{{ item.instance_id }}'
        aws_access_key: ASIA5LTGTUC7YWI5JRLL
        aws_secret_key: fNOFcXub/ErgldB7ZQY7J/dsB8K4yXAr/w2pxLmr
        security_token: FwoGZXIvYXdzEJ3//////////wEaDLu73hTHlu2coG3OWSLDAWBlUZ6bZi0/sy774V5ZBYLdC95o3esCgmQTvDyTRQmBu/S4st3O5Io+z4hTgbwCWGc3LN8WkIWfDKWBWpxvQMPWwB0A1vm+7J3894sMdZpBymtM/UJKGZmPa+P/6LJge447rLIkqxb50EuB37EQ+8Fatjb3eTqe3o3iCAycVz4YLk6FTc3x1X3zlw1P/CGCP1JJ4uNwVmw9xR5lGJ0WMEU6buwy+1bIjeWSxcwBJO50zwyYLlrKE/wXKX9mJEtQuPkAmyie4+7+BTItlbio81ufURspbZiMp802wt8MF1ZDHWcWqvfp+IVeB7X/yq4faauN5CsMJtgE
      loop: "{{ ec2_info.instances }}"
      loop_control:
        label: "{{ item.instance_id }}"
